[agent]
  debug = true

  interval = "10s"
  flush_interval = "10s"
  flush_jitter = "0s"

  metric_buffer_limit = 30000
  metric_batch_size = 1000
  collection_jitter = "0s"

[[inputs.file]]
  files = ["/csvuploads/*"]

  data_format = "csv"
  csv_header_row_count = 1
  
  csv_measurement_column = "description"

  csv_timestamp_column = "date"
  csv_timestamp_format = "02-01-2006 - 15:04:05"
  csv_timezone = "Europe/Amsterdam"

  #csv_tag_columns = ["Type", "Location", "Section", "Place", "Orientation"]

  csv_delimiter = ";"
  csv_trim_space = true
  csv_comment = "#"

# PROCESSING: Transform the data
[[processors.starlark]]
  source = '''
def apply(metric):
    mArray = metric.name.split(" ")
    
    # create metric from sensor ID and add time from metric
    new_metric = Metric(mArray[-1][1:-1])
    new_metric.time = metric.time

    # add tags
    tags = mArray[0].split("-")
    new_metric.tags["Location"] = tags[0]
    new_metric.tags["Section"] = tags[1]
    new_metric.tags["Place"] = tags[2]
    new_metric.tags["Type"] = tags[3]

    if len(mArray) != 3: # no orientation added
        new_metric.tags["Orientation"] = ""
    else:
        new_metric.tags["Orientation"] = mArray[1][1:-1]

    # add fields
    new_metric.fields.update(metric.fields)


    return new_metric
  '''

# OUTPUT: Write the transformed data to a new CSV file
[[outputs.file]]
  files = ["/tmp/metrics.out"]
  data_format = "influx"
  influx_sort_fields = true
